#!/usr/bin/env bash

set -euo pipefail

usage() {
    echo "Usage: $0 [-l|--local] \"Firstname Lastname <email.address@example.com>\""
    exit 1
}

# Check if git command is available
if ! command -v git &> /dev/null; then
    echo "Error: git command not found. Please install git and try again."
    exit 1
fi

# Check if current directory is a git repository
is_git_repository() {
    git rev-parse --is-inside-work-tree >/dev/null 2>&1
}

# Display current configuration
display_configuration() {
    echo "Current Git user configuration:"
    echo ""
    echo "Global:"
    echo "  Name: $(git config --global user.name)"
    echo "  Email: $(git config --global user.email)"
    echo "Local:"
    if is_git_repository; then
        echo "  Name: $(git config user.name)"
        echo "  Email: $(git config user.email)"
    else
        echo "  Not in a git repository"
    fi
}

# Parse command line arguments
local_flag=""
if [ $# -gt 0 ]; then
    if [[ "$1" == "-l" || "$1" == "--local" ]]; then
        if ! is_git_repository; then
            echo "Error: The -l/--local flag can only be used within a git repository."
            exit 1
        fi
        local_flag="true"
        shift
    fi
fi

# Check if the input is provided
# Display current configuration if no arguments are provided
if [ $# -eq 0 ]; then
    display_configuration
    exit 0
fi

# Extract name and email from input
input="$1"
name=$(echo "$input" | sed -E 's/^(.*) <.*>$/\1/')
email=$(echo "$input" | sed -E 's/^.* <(.*)>$/\1/')

# Set git configuration
if [ -n "$local_flag" ]; then
    git config user.name "$name"
    git config user.email "$email"
else
    git config --global user.name "$name"
    git config --global user.email "$email"
fi

echo "Git user configuration updated successfully."
echo ""
display_configuration
echo ""
